{"ts":1348165471538,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# modules\n\nCommonJS modules implementation for web applications written by Andy VanWagoner\n([thetalecrafter](http://github.com/thetalecrafter)).\n\nSome of the motivation for this project can be found in [this article](http://thetalecrafter.wordpress.com/2011/09/22/commonjs-in-the-browser/).\n\n## Client-Side Features\n\n * Modules 1.1.1 implementation for in-browser use\n * module.require function similar to nodejs implementation\n * require.ensure(id, callback) for async \n\n## Server-Side Features\n\n * Automatically put all modules into a single js file\n * Configure minification using your favorite compressor\n * Manage configurations in a json file\n * middleware for express\n\n## Usage\n\nServer JavaScript (Node.js + express)\n\nInstall modules from npm: `npm install modules`\n\n```javascript\nvar app = express(), modules = require('modules');\napp.use(modules.middleware({\n\t// all of the options are optional\n\troot: __dirname, // server side root directory for modules\n\tpath: '/module/', // url path for modules\n\tmaxAge: 24 * 60 * 60 * 1000, // Cache-Control max-age for modules\n\tcompress: function(str, done) {\n\t\t// do compression using uglify, or your prefered compressor\n\t\tdone(err, compressed); // when done or if there is an error\n\t},\n\tmap: { jquery:'./lib/jquery-wrapped.min.js' }, // map pretty names to filenames\n\ttranslate: {\n\t\thtml: function(id, filename, content) {\n\t\t\t// convert html templates to js functions, or do whatever\n\t\t\t//  you want to convert file types to commonjs modules\n\t\t\treturn 'exports.template = ' + _.template(content).source;\n\t\t}\n\t},\n\tforbid: [ // blacklist files or folders you don't want accessible.\n\t\t'./config/',\n\t\t'../server.js'\n\t]\n}));\n```\n\nPHP:\n\n```php\n<?= Modules::script('module-name', $opts) ?>\n```\n\nClient JavaScript (using modules):\n\n```javascript\nvar mod = require('some/module'); // returns exports of that module\nexports.a = 'a'; // export stuff\nmodules.exports = function() {}; // this works too\n\nObject.keys(module); // [ 'exports', 'id', 'uri', 'loaded', 'parent', 'children' ];\nrequire.ensure('module/gamma', function() {\n\t// gamma and all of its deep dependencies have been loaded asynchronously\n\tvar gamma = require('module/gamma');\n});\n```\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Andy VanWagoner\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"]],"start1":0,"start2":0,"length1":0,"length2":3281}]],"length":3281}
